@using Microsoft.AspNetCore.Identity
@using EFDataAccessLibrary.Models;
@using EFDataAccessLibrary.DataAccess;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject DataContext Db

@section Styles {
    <link rel="stylesheet" href="~/css/site.css" />
}
  
@{
    var _user = await UserManager.GetUserAsync(User);

    List<Notification> notifications = new();
    int notificationsUnreaded = -1;
    string GetName(string name)
    {
        if (name.Contains("@"))
        {
            return name.Split("@")[0];
        }
        return name;
    }
    if(_user != null) {
        notifications = Db.UserNotifications
            .Where(u => u.UserID == _user.Id)
            .Select(n => n.Notification)
            .OrderByDescending(n => n.CreateAt)
            .ToList();
        notificationsUnreaded = notifications.Where(n => !n.Readed).Count();
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (_user.OwningTeamId != null)
        {
            <li class="nav-item">
                <a class="nav-link" title="Owning Team" asp-page="/team" asp-route-id="@_user.OwningTeamId">
                    <span>My Team</span>
                </a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" title="Premium currency">
                <img src="~/icons/dollars_symbol.png" class="icon" /> @_user.Dollars
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" title="Free currency" onclick="Payment()">
                <img src="~/icons/euro_symbol.png" class="icon" /> <span id="goldText">@string.Format("{0:N}", _user.Gold)</span>
            </a>
        </li>
        <li class="nav-item notification-icon" onclick="ToggleNotifications()">
            <a class="nav-link" title="Notifications">
                <span class="material-icons-outlined">
                    notifications
                </span>
                @if (notificationsUnreaded > 0)
                {
                    <span class="notification-badge">@notificationsUnreaded</span>
                }
            </a>
            <div class="notifications-container" id="notifications-container">
                @foreach (var notification in notifications)
                {
                    <div class="notification" onclick="SetNotificationAsReaded(@notification.ID)">
                        <div class="notification-data">
                            @if (!notification.Readed)
                            {
                                <div class="notification-readed">•</div>
                            }
                            <span class="notification-date">@notification.CreateAt.ToString("dd MMM yyyy HH:mm")</span>
                        </div>
                        <p class="notification-text">@notification.Text</p>
                    </div>
                }
            </div>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Cześć @GetName(User.Identity.Name)!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
<script>
    document.getElementById('notifications-container').style.display = "none";

    function Payment() {
        $.ajax({
            url: "/user/PaymentDollars",
            type: "post",
            contentType: "application/x-www-form-urlencoded",
            data: { 'amount': 5000 },
            success: function (data, textStatus, xhr) {
                RefreshGold();
            }
        });
    }

    function SetNotificationAsReaded(NotifId) {
        $.ajax({
            url: "/user/SetNotificationAsReaded",
            type: "post",
            contentType: "application/x-www-form-urlencoded",
            data: { 'NotifId': NotifId },
            success: function (data, textStatus, xhr) {
               
            }
        });
    }

    function ToggleNotifications() {
        var container = document.getElementById('notifications-container');
        if (container.style.display === "none") {
            container.style.display = "block";
        } else {
            container.style.display = "none";
        }
    }
</script>